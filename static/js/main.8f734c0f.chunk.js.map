{"version":3,"sources":["firebase/api.js","firebase/config.js","App.js","reportWebVitals.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","database","auth","todolistRef","ref","getUid","currentUser","uid","App","useState","todolist","setTodolist","todo","setTodo","useEffect","authState","subscribe","user","console","log","list","child","pipe","map","changes","c","key","snapshot","val","data","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithRedirect","login","handleRemoveTodo","remove","removeTodo","handleUpdateTodo","status","update","isFinished","updateTodo","className","onChange","e","target","value","onClick","name","length","push","t","signOut","then","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSASMA,EAAMC,IAASC,cCTC,CACpBC,OAAQ,0CACRC,WAAY,qCACZC,YAAa,0DACbC,UAAW,uBDMPC,EAAWN,IAASM,WACpBC,EAAOP,IAASO,OAChBC,EAAcF,EAASG,IAAI,YAE3BC,EAAS,kBAAMH,EAAKI,YAAYC,K,ME6DvBC,MA/Df,WAAgB,IAAD,EACmBC,mBAAS,IAD5B,mBACNC,EADM,KACIC,EADJ,OAEWF,mBAAS,IAFpB,mBAENG,EAFM,KAEAC,EAFA,KAIbC,qBAAU,WFQoBC,YAAUrB,EAAIQ,QEP7Bc,WAAU,SAACC,GAClBA,GACFC,QAAQC,IAAI,iBAAkBF,GFkB7BG,YAAKjB,EAAYkB,MAAMhB,MAAWiB,KACvCC,aAAI,SAACC,GAAD,OACFA,EAAQD,KAAI,SAACE,GACX,OAAO,aAAEC,IAAKD,EAAEE,SAASD,KAAQD,EAAEE,SAASC,cEpBlCZ,WAAU,SAACa,GAAD,OAAUlB,EAAYkB,OFJ7B,WACnB,IAAMC,EAAW,IAAInC,IAASO,KAAK6B,mBACnCD,EAASE,oBAAoB,CAC3BC,OAAQ,mBAEV/B,EAAKgC,mBAAmBJ,GEClBK,QAGH,IAEH,IAUMC,EAAmB,SAACV,IFgBF,SAACA,GACzBvB,EAAYkB,MAAMhB,KAAUgB,MAAMK,GAAKW,SEhBrCC,CAAWZ,IAGPa,EAAmB,SAACb,EAAKc,IFgBP,SAACd,EAAKc,GAC9BrC,EAAYkB,MAAMhB,KAAUgB,MAAMK,GAAKe,OAAO,CAC5CC,WAAYF,IEjBZG,CAAWjB,EAAKc,IAGlB,OACE,sBAAKI,UAAU,MAAf,UACE,0CACA,sBAAKA,UAAU,iBAAf,UACE,uBAAOC,SAtBQ,SAACC,GAAD,OAAOjC,EAAQiC,EAAEC,OAAOC,QAsBRA,MAAOpC,IACtC,wBAAQqC,QArBQ,WFiBD,IAACC,EEhBA,IAAhBtC,EAAKuC,SFgBWD,EEbZtC,EFcVT,EAAYkB,MAAMhB,KAAU+C,KAAK,CAC/BF,OACAR,YAAY,IEfZ7B,EAAQ,MAgBJ,oBAEF,oBAAI+B,UAAU,gBAAd,SACGlC,EAASyC,OACRzC,EAASa,KAAI,SAAC8B,GAAD,OACX,+BACIA,EAAEX,WAKF,mBAAGO,QAAS,kBAAMV,EAAiBc,EAAE3B,KAAK,IAA1C,SAAmD2B,EAAEH,OAJrD,sBAAMD,QAAS,kBAAMV,EAAiBc,EAAE3B,KAAK,IAA7C,SACG2B,EAAEH,OAKP,wBAAQD,QAAS,kBAAMb,EAAiBiB,EAAE3B,MAA1C,sBARO2B,EAAE3B,QAYb,8CAGJ,wBAAQuB,QAAS,kBF3CrB/C,EACGoD,UACAC,MAAK,WACJrC,QAAQC,IAAI,sBAEbqC,OAAM,SAACC,GACNvC,QAAQC,IAAIsC,OEqCZ,wBC1DSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBL,MAAK,YAAkD,IAA/CM,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8f734c0f.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\nimport { list } from \"rxfire/database\";\r\nimport { authState } from \"rxfire/auth\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\nimport { config } from \"./config\";\r\n\r\nconst app = firebase.initializeApp(config);\r\nconst database = firebase.database();\r\nconst auth = firebase.auth();\r\nconst todolistRef = database.ref(\"todolist\");\r\n\r\nconst getUid = () => auth.currentUser.uid;\r\n\r\nexport const login = () => {\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  provider.setCustomParameters({\r\n    prompt: \"select_account\",\r\n  });\r\n  auth.signInWithRedirect(provider);\r\n};\r\n\r\nexport const checkLogin = () => authState(app.auth());\r\n\r\nexport const logout = () =>\r\n  auth\r\n    .signOut()\r\n    .then(() => {\r\n      console.log(\"logout success!\");\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n\r\nexport const getTodo = () => {\r\n  return list(todolistRef.child(getUid())).pipe(\r\n    map((changes) =>\r\n      changes.map((c) => {\r\n        return { key: c.snapshot.key, ...c.snapshot.val() };\r\n      })\r\n    )\r\n  );\r\n};\r\n\r\nexport const addTodo = (name) => {\r\n  todolistRef.child(getUid()).push({\r\n    name,\r\n    isFinished: false,\r\n  });\r\n};\r\n\r\nexport const removeTodo = (key) => {\r\n  todolistRef.child(getUid()).child(key).remove();\r\n};\r\n\r\nexport const updateTodo = (key, status) => {\r\n  todolistRef.child(getUid()).child(key).update({\r\n    isFinished: status,\r\n  });\r\n};\r\n","export const config = {\r\n  apiKey: \"AIzaSyDlYg24-dklqq9NyBbQRxED9mB0H2gN50w\",\r\n  authDomain: \"fir-todo-app-74716.firebaseapp.com\",\r\n  databaseURL: \"https://fir-todo-app-74716-default-rtdb.firebaseio.com/\",\r\n  projectId: \"fir-todo-app-74716\",\r\n};\r\n","import React, { useEffect, useState } from \"react\";\nimport {\n  removeTodo,\n  addTodo,\n  getTodo,\n  updateTodo,\n  checkLogin,\n  logout,\n  login,\n} from \"./firebase/api\";\nimport \"./App.css\";\n\nfunction App() {\n  const [todolist, setTodolist] = useState([]);\n  const [todo, setTodo] = useState(\"\");\n\n  useEffect(() => {\n    checkLogin().subscribe((user) => {\n      if (user) {\n        console.log(\"login success!\", user);\n        getTodo().subscribe((data) => setTodolist(data));\n      } else {\n        login();\n      }\n    });\n  }, []);\n\n  const handleChange = (e) => setTodo(e.target.value);\n\n  const handleAddTodo = () => {\n    if (todo.length === 0) {\n      return;\n    }\n    addTodo(todo);\n    setTodo(\"\");\n  };\n\n  const handleRemoveTodo = (key) => {\n    removeTodo(key);\n  };\n\n  const handleUpdateTodo = (key, status) => {\n    updateTodo(key, status);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>TODOLIST</h1>\n      <div className=\"todolist-input\">\n        <input onChange={handleChange} value={todo} />\n        <button onClick={handleAddTodo}>ADD</button>\n      </div>\n      <ul className=\"todolist-list\">\n        {todolist.length ? (\n          todolist.map((t) => (\n            <li key={t.key}>\n              {!t.isFinished ? (\n                <span onClick={() => handleUpdateTodo(t.key, true)}>\n                  {t.name}\n                </span>\n              ) : (\n                <s onClick={() => handleUpdateTodo(t.key, false)}>{t.name}</s>\n              )}\n              <button onClick={() => handleRemoveTodo(t.key)}>DELETE</button>\n            </li>\n          ))\n        ) : (\n          <h2>Loading...</h2>\n        )}\n      </ul>\n      <button onClick={() => logout()}>LOGOUT</button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}